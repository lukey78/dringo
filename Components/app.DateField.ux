<Panel ux:Class="app.DateField">
    <object ux:Property="DateValue" />

    <JavaScript>
        var DateUtils = require('../Modules/DateUtils');
        displayDate = this.DateValue.inner().map(function(d) {
            return DateUtils.formatDate(DateUtils.stringToDate(d));
        });
        module.exports = {
            displayDate
        };
    </JavaScript>

    <app.ReadOnlyTextBox Value="{displayDate}">
        <Clicked>
            <Toggle Target="expandDatepicker" />
        </Clicked>
    </app.ReadOnlyTextBox>

    <WhileTrue ux:Name="expandDatepicker">
        <AlternateRoot ux:Name="dpModal" ParentNode="{Resource FullWindow}">
            <StackPanel Background="White" Height="50%">
                <NativeViewHost>
                    <Native.DatePicker ux:Name="datePicker" />
                </NativeViewHost>
                <JavaScript>
                    var DateUtils = require('../Modules/DateUtils');

                    var myDateProperty = this.DateValue.innerTwoWay();

                    // set initial value to current value
                    this.DateValue.inner().onValueChanged(module, function(d) {
                        if (d === null) {
                            return;
                        }
                        datePicker.setDate(DateUtils.getDateStringAsArray(d));
                    });

                    formattedDate = myDateProperty.map(function(d) {
                        return DateUtils.formatDate(DateUtils.stringToDate(d));
                    });

                    datePicker.CurrentDate.addSubscriber(function () {
                        var d = datePicker.CurrentDate.value;
                        myDateProperty.value = DateUtils.getDateArrayAsDateString(d);
                        //console.log("Date changed: " + myDateProperty.value);
                    });

                    reset = function() {
                        myDateProperty.value = null;
                    }

                    choose = function() {
                    }

                    module.exports = {
                        myDateProperty,
                        formattedDate,
                        choose,
                        reset
                    };

                </JavaScript>

                <app.Button Text="Datum wählen: {formattedDate}" Clicked="{choose}">
                    <Clicked>
                        <Toggle Target="expandDatepicker" />
                    </Clicked>
                </app.Button>

                <app.Button Text="Datum löschen" Clicked="{reset}">
                    <Clicked>
                        <Toggle Target="expandDatepicker" />
                    </Clicked>
                </app.Button>
            </StackPanel>
        </AlternateRoot>
    </WhileTrue>


</Panel>
